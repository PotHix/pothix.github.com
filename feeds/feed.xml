<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PotHix blog</title>
  <subtitle>@PotHix</subtitle>
  <id>http://pothix.com/</id>
  <link href="http://pothix.com/"/>
  <link href="http://pothix.com/feeds/feed.xml" rel="self"/>
  <updated>2017-03-01T21:00:00-03:00</updated>
  <author>
    <name>Willian Molinari (a.k.a PotHix)</name>
  </author>
  <entry>
    <title>My presentation at FOSDEM 2017</title>
    <link rel="alternate" href="http://pothix.com/2017/03/02/my-presentation-at-fosdem-2017.html"/>
    <id>http://pothix.com/2017/03/02/my-presentation-at-fosdem-2017.html</id>
    <published>2017-03-01T21:00:00-03:00</published>
    <updated>2017-03-04T18:19:42-03:00</updated>
    <author>
      <name>Willian Molinari (a.k.a PotHix)</name>
    </author>
    <content type="html">&lt;p&gt;This year my proposal to speak at &lt;a href="http://fosdem.org"&gt;FOSDEM&lt;/a&gt; was accepted and I
spoke at the Desktop devroom! :)&lt;/p&gt;

&lt;p&gt;It was my first talk in English, so I decided to do as many rehearsals as I
could. I was 8 in total, but as expected, it was still ahead of time. :P&lt;/p&gt;

&lt;p&gt;I had 30 minutes (including questions) to present and I did it in 26. I usually
speak fast and this presentation &lt;strong&gt;was made to be fast&lt;/strong&gt; because I had a lot of
content to show in 30 minutes. So, &lt;strong&gt;it was FAST&lt;/strong&gt; (even more than what I was
expecting). LOL&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m OK with the final result. It&amp;rsquo;s far from being my best presentation but it&amp;rsquo;s
the first one in a different language, so it&amp;rsquo;s acceptable. &lt;/p&gt;

&lt;p&gt;They already published the video for my presentation, and it
is &lt;a href="#"&gt;available here&lt;/a&gt;. 
And &lt;a href="#"&gt;here is the link for the slides&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;FOSDEM was great, can&amp;rsquo;t wait for the next! :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Escrevendo o Desconstruindo a web</title>
    <link rel="alternate" href="http://pothix.com/2016/10/03/escrevendo-o-desconstruindo-a-web.html"/>
    <id>http://pothix.com/2016/10/03/escrevendo-o-desconstruindo-a-web.html</id>
    <published>2016-10-02T21:00:00-03:00</published>
    <updated>2017-03-04T18:12:20-03:00</updated>
    <author>
      <name>Willian Molinari (a.k.a PotHix)</name>
    </author>
    <content type="html">&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Escrevi um livro em 315 horas, geralmente aos fins de semana durante
2 ou 3 horas consecutivas. O processo completo durou 8 meses e foi lançado
oficialmente na Rubyconfbr2016.&lt;/p&gt;

&lt;p&gt;Como muitos já sabem, eu lancei um livro chamado
&lt;a href="https://desconstruindoaweb.com.br"&gt;Desconstruindo a web&lt;/a&gt; pela
&lt;a href="https://www.casadocodigo.com.br/products/livro-desconstruindo-web"&gt;Casa do Código&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Eu sou meio maluco (retardado, segundo o
&lt;a href="https://twitter.com/georgeguimaraes"&gt;George Guimarães&lt;/a&gt;) por produtividade e
organização pessoal e resolvi escrever sobre como foi o processo e mostrar todas
as métricas que eu coletei.&lt;/p&gt;

&lt;h3&gt;Como começou&lt;/h3&gt;

&lt;p&gt;Há muito tempo atrás, por volta de 2010, eu participei do
&lt;a href="http://devinsampa.com.br/"&gt;DevInSampa&lt;/a&gt;. Esse era um evento muito legal que não
era focado em uma tecnologia específica e tinha como única finalidade trazer
vários assuntos legais da área de desenvolvimento.&lt;/p&gt;

&lt;p&gt;Nessa época, eu pensei em fazer uma palestra que mostrasse tudo que está
acontecendo no computador enquanto você acessa uma aplicação. Quando comecei a
fazer um documento sobre isso, percebi que eu teria &lt;strong&gt;muito&lt;/strong&gt; trabalho pela
frente e comecei a procrastinação. Fiquei bastante tempo nesse estado&amp;hellip; Demorei
tanto que o DevInSampa morreu no meio do caminho. :(&lt;/p&gt;

&lt;p&gt;A procrastinação durou até o meio do ano de 2015, quando o
&lt;a href="https://twitter.com/brunoadacosta"&gt;Bruno Costa&lt;/a&gt; me chamou para
palestrar no &lt;a href="http://www.devinsantos.com.br/"&gt;DevInSantos&lt;/a&gt;! Até o nome
do evento era parecido, era uma segunda chance para fazer a palestra
perdida.&lt;/p&gt;

&lt;p&gt;Após aceitar o convite e dar um tema aleatório, eu comecei a fazer as pesquisas
sobre o que eu poderia falar. Essa pesquisa me levou a conclusão que mostrar
tudo que acontece em uma requisição web seria uma boa ideia. Depois de pensar um
pouco, o melhor tema que eu consegui foi &amp;ldquo;&lt;strong&gt;Desconstruindo a web&lt;/strong&gt;&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Depois de algumas semanas fazendo os slides e pouco mais de 40 horas de
pesquisa, eu finalmente terminei os slides da apresentação. Ao terminar, percebi
que havia muito conteúdo para uma palestra de 50 minutos. Eu que sempre preferi
que as palestras tivessem apenas 30 minutos, agora estava reclamando que o tempo
não era o suficiente para o conteúdo. Isso me fez pensar que talvez essa não
fosse a mídia correta para expor todo esse conteúdo.&lt;/p&gt;

&lt;p&gt;Fiz a palestra e a recepção foi boa, mesmo com a velocidade alta que eu tive que
falar para terminar a palestra a tempo. Apesar disso, saí do evento convicto que
eu precisava de outra mídia para passar tudo que eu tinha estudado. E foi aí que
uma velha ideia voltou para a minha cabeça: &amp;ldquo;E se eu escrever um livro?&amp;rdquo;&lt;/p&gt;

&lt;h3&gt;A ideia&lt;/h3&gt;

&lt;p&gt;Escrever um livro é um objetivo de vida para mim, portanto eu sempre estava
pensando em como atingi-lo. Uma das ideias era escrever um livro de fantasia
usando &lt;a href="https://en.wikipedia.org/wiki/Self-publishing"&gt;self-publishing&lt;/a&gt; em algum
momento da vida, mas depois de ver a quantidade de conteúdo que a palestra
gerou, surgiram algumas ideias. O conteúdo já estava estruturado e eu já tinha
ideia de quase tudo que queria mostrar, bastava colocar em palavras e imagens.&lt;/p&gt;

&lt;p&gt;Consegui entrar em contato com o
&lt;a href="https://twitter.com/adrianoalmeida7"&gt;Adriano Almeida&lt;/a&gt; da casa do código por
indicação do meu amigo &lt;a href="https://twitter.com/vinibaggio"&gt;Vinicius Baggio&lt;/a&gt; e
apresentei o material que eu já tinha e as ideias para o que ele poderia
ser. Ele gostou do material e me passou as condições para continuar o trabalho.&lt;/p&gt;

&lt;h3&gt;A preparação&lt;/h3&gt;

&lt;p&gt;Nessa época eu estava começando a trabalhar em um projeto freelancer para uma
empresa de fora do Brasil, além do meu trabalho em tempo integral para a
&lt;a href="http://locaweb.com.br"&gt;Locaweb&lt;/a&gt;. Eu precisaria organizar o meu tempo para
trabalhar no livro, além de manter essas atividades.&lt;/p&gt;

&lt;p&gt;O único tempo que eu tinha eram algumas horas durante o fim de semana. Com isso,
para trabalhar nesse projeto eu precisaria alinhar com a minha esposa e saber se
ela estava comigo nesse meu novo projeto. Depois de combinar com as partes
envolvidas e fazer o meu planejamento, era hora de começar!&lt;/p&gt;

&lt;h3&gt;O processo de escrita&lt;/h3&gt;

&lt;p&gt;Comecei a trabalhar no livro logo no começo do ano, sendo que a
primeira versão do prefácio foi escrita no dia &lt;strong&gt;9 de Janeiro&lt;/strong&gt;. Eu
mantive uma planilha no &lt;a href="https://docs.google.com"&gt;Google Docs&lt;/a&gt; para
contabilizar todas as horas que eu trabalhasse nele. Lá eu também
registrei o que eu estava fazendo durante as horas que eu estava
trabalhando.&lt;/p&gt;

&lt;p&gt;A planilha era uma forma bem simples de eu guardar um log do que eu
estava fazendo. Simples assim:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/posts/escrevendo-o-desconstruindo-a-web/planilha-3339a565.png" alt="Planilha simples de controle de horas" /&gt;&lt;/p&gt;

&lt;p&gt;O último dia de trabalho registrado na planilha é &lt;strong&gt;14 de Agosto de 2016&lt;/strong&gt;, que
é o dia que eu considero terminados todos os trabalhos relacionados ao livro.&lt;/p&gt;

&lt;p&gt;Por ter essa planilha, eu consigo fazer alguns gráficos interessantes. A partir
de agora, vou utilizar os dados que eu extraí de lá para mostrar mais sobre o
processo de escrita.&lt;/p&gt;

&lt;h4&gt;Dias trabalhados&lt;/h4&gt;

&lt;p&gt;&lt;img src="/images/posts/escrevendo-o-desconstruindo-a-web/quando-trabalhei-mais-b952b91c.png" alt="Quando trabalhei mais" /&gt;&lt;/p&gt;

&lt;p&gt;A maior parte do tempo que eu escrevi foi nos finais de semana, que
somam 50% do trabalho no livro. Minha ideia era trabalhar cerca de 3
horas consecutivas no livro. Essa quantidade de horas é o máximo que
eu consigo trabalhar em total concentração.&lt;/p&gt;

&lt;p&gt;Eu sempre busquei ambientes livres de distração, mas depois de ler o
&lt;a href="https://www.goodreads.com/book/show/25744928-deep-work"&gt;Deep Work&lt;/a&gt; (que eu
recomendo para todos!) eu melhorei ainda mais a minha forma de trabalhar.&lt;/p&gt;

&lt;p&gt;Sempre que começava a trabalhar, eu avisava a minha esposa que eu ficaria
incomunicável por algumas horas. Durante as próximas 2-3 horas, não haiva
comunicador, e-mail, celular ou qualquer outra coisa que pudesse tirar a minha
atenção.&lt;/p&gt;

&lt;p&gt;Eu tenho uma &lt;em&gt;playlist&lt;/em&gt; no &lt;a href="https://play.google.com/music"&gt;Google Music&lt;/a&gt; só com
músicas que me ajudam na concentração. Quando não estava usando essa &lt;em&gt;playlist&lt;/em&gt;,
eu usava apenas barulho de chuva com o site
&lt;a href="http://rain.today/"&gt;rain.today&lt;/a&gt;. Quem me conhece sabe que eu não sou de comprar
fones de ouvido caros, portanto eu tenho um fone vagabundo e uso sons desse tipo
para me isolar do ambiente.&lt;/p&gt;

&lt;h4&gt;Horários que eu trabalhava&lt;/h4&gt;

&lt;p&gt;&lt;img src="/images/posts/escrevendo-o-desconstruindo-a-web/horario-de-trabalho-c6ea93bc.png" alt="Horário de trabalho" /&gt;&lt;/p&gt;

&lt;p&gt;O horário que eu mais iniciei foi as 18 horas. Geralmente aos domingos, era o
momento que eu já tinha aproveitado uma boa parte do dia com a minha esposa e
trabalhava até começar o episódio de Game of Thrones na HBO. :D&lt;/p&gt;

&lt;p&gt;Mas tem início em quase todas as horas do dia.&lt;/p&gt;

&lt;h4&gt;Horas por dia&lt;/h4&gt;

&lt;p&gt;&lt;img src="/images/posts/escrevendo-o-desconstruindo-a-web/horas-por-dia-14a10c73.png" alt="Horas por dia" /&gt;&lt;/p&gt;

&lt;p&gt;Esse gráfico foi um pouco assustador para mim. Durante o feriado de Corpus
Christi, que aconteceu no dia 26 de Maio, eu estava sozinho em casa e aproveitei
para trabalhar no livro. Em um dos dias desse &amp;ldquo;feriado prolongado&amp;rdquo; eu trabalhei
12 horas no livro, que está representado como aquele ponto entre 26 de Maio e 12
de Junho.&lt;/p&gt;

&lt;p&gt;Durante essas datas, eu só sai de casa umas 2 vezes para comprar comida, o resto
do tempo foi pesquisando e escrevendo. Eu não tinha nenhum deadline, apenas a
vontade de pesquisar e escrever. Isso me fez pensar que eu tenho sorte de ser
casado, porque senão eu seria mais maluco que o normal.&lt;/p&gt;

&lt;h4&gt;Horas por mês&lt;/h4&gt;

&lt;p&gt;&lt;img src="/images/posts/escrevendo-o-desconstruindo-a-web/horas-por-mes-832c85b6.png" alt="Horas por mês" /&gt;&lt;/p&gt;

&lt;p&gt;Eu estava bem curioso para saber como foi a distribuição de horas durante os
meses. Como eu esperava, o mês de Julho tem uma grande quantidade de horas. Isso
aconteceu porque eu decidi mandar para a Rubyconf a palestra que inspirou o
livro, e ela foi aceita. Esse fato colocou um &lt;em&gt;deadline&lt;/em&gt; no livro. :)&lt;/p&gt;

&lt;p&gt;Após conversar com a &lt;a href="https://casadocodigo.com.br"&gt;Casa do código&lt;/a&gt;, combinamos
que eu precisaria entregar o conteúdo até o dia &lt;strong&gt;7 de Agosto&lt;/strong&gt; para que o livro
ficasse pronto a tempo da conferência.&lt;/p&gt;

&lt;p&gt;Durante os fins de semana do mês de Julho eu trabalhei cerca de 14 horas por fim
de semana escrevendo. Apesar de ser um pouco cansativo, eu estava bem feliz por
estar trabalhando no projeto e não me desgastei muito.&lt;/p&gt;

&lt;p&gt;Como o prazo era relativamente apertado, eu decidi tirar horas na semana para
fazer isso também. Com essa escolha, eu precisei negociar umas &amp;ldquo;férias&amp;rdquo; do
projeto que trabalho como freelancer e que toma cerca de 2-3 horas diárias do
meu tempo.&lt;/p&gt;

&lt;h4&gt;O que compõe a escrita de um livro&lt;/h4&gt;

&lt;p&gt;Eu sempre tive curiosidade da quantidade de tempo que um escritor gasta nas
atividades de escrever um livro e me usei como cobaia para entender um pouco.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/posts/escrevendo-o-desconstruindo-a-web/atividades-a30fc6f0.png" alt="Atividades" /&gt;&lt;/p&gt;

&lt;p&gt;Escrever é só uma das atividades de um escritor, assim como digitar é só uma das
atividades de um programador. Apenas &lt;strong&gt;42%&lt;/strong&gt; do tempo foi gasto organizando as
palavras e escrevendo da melhor maneira possível.&lt;/p&gt;

&lt;p&gt;O tempo de pesquisa está bem ligado com o tempo de escrita, consumindo &lt;strong&gt;12%&lt;/strong&gt;
do tempo total. Infelizmente eu não separei exatamente a quantidade de horas que
eu gastei com pesquisa, portanto, é possível que parte do tempo considerado como
escrita também seja pesquisa. Eu aprendi muito no processo! :)&lt;/p&gt;

&lt;p&gt;Eu decidi fazer todos os desenhos, o que tomou &lt;strong&gt;7%&lt;/strong&gt; do tempo. Eu não sou muito
bom com desenho, mas fiquei contente com o resultado final. Eu utilizei muito
&lt;a href="https://inkscape.org/en/"&gt;Inkscape&lt;/a&gt; e um pouco de &lt;a href="https://www.gimp.org/"&gt;GIMP&lt;/a&gt;
para trabalhar com as imagens do livro. Para a imagem do &amp;ldquo;mapa&amp;rdquo;, que é meio
&amp;ldquo;quem é esse Pokémon?&amp;rdquo;, eu criei um script Python que usa
&lt;a href="https://www.cairographics.org/"&gt;Cairo&lt;/a&gt; e &lt;code&gt;rsvg&lt;/code&gt; para manipular os gráficos
&lt;a href="https://en.wikipedia.org/wiki/Scalable_Vector_Graphics"&gt;SVG&lt;/a&gt; do Inkscape e
gerar as imagens na sequência que eu esperava.&lt;/p&gt;

&lt;p&gt;Era importante criar um site para o livro, pois todo o estudo é baseado em uma
URL. Por esse motivo eu gastei &lt;strong&gt;6%&lt;/strong&gt; do tempo na criação dessa página. Não foi
um processo complicado, mas eu queria que ficasse exatamente como eu esperava.&lt;/p&gt;

&lt;p&gt;Outra dúvida que eu tinha era sobre a reescrita de conteúdo e eu descobri que os
primeiros capítulos geralmente são reescritos. Utilizei &lt;strong&gt;6%&lt;/strong&gt; do meu tempo para
reescrever os primeiros capítulos, que já não pareciam com a continuação do
livro. Só é preciso saber a hora de parar, senão fica igual refactoring infinito
de código.&lt;/p&gt;

&lt;p&gt;Revisão é uma parte importante do processo e consumiu &lt;strong&gt;25%&lt;/strong&gt; do tempo total. Eu
chamei 4 revisores técnicos competentes para me ajudar no processo (obrigado
novamente &lt;a href="http://milhouseonsoftware.com/"&gt;Milhouse&lt;/a&gt;,
&lt;a href="https://www.broota.com.br/quem-somos"&gt;Daniel Sousa&lt;/a&gt;,
&lt;a href="https://twitter.com/mateuslinhares"&gt;Mateus Linhares&lt;/a&gt; e
&lt;a href="https://twitter.com/vinibaggio"&gt;Vinibaggio&lt;/a&gt;) que sempre me davam suas opiniões
sinceras sobre o conteúdo. Além disso eu contei também com uma revisora da casa
do código, que acompanhou a escrita de cada capítulo e me dava dicas sobre a
escrita e didática.&lt;/p&gt;

&lt;p&gt;Eu resolvi pegar uma semana de férias antes da entrega do livro para trabalhar
nele em tempo integral. Ele já estava completo e durante essa uma semana eu
trabalhei em revisão. Essa revisão não era igual as que foram feitas durante o
processo de escrita e sim uma revisão geral para ver se o conteúdo não estava
duplicado entre os capítulos e se estava sendo mostrado de uma forma coesa.&lt;/p&gt;

&lt;h3&gt;A entrega&lt;/h3&gt;

&lt;p&gt;Eu mantive o livro em segredo durante todo o processo de escrita. Apenas um
grupo seleto de pessoas sabiam que eu estava escrevendo, para evitar
expectativas. Minha meta era publicar o livro na Rubyconf no dia 23 de Setembro,
no final da minha palestra.&lt;/p&gt;

&lt;p&gt;A casa do código colocou no site deles no começo do mês, mas não divulgaram em
nenhum lugar. Alguns amigos descobriram e eu pedi para não divulgarem por
enquanto. Ver o livro no site deles e não divulgar foi algo bem difícil, mas eu
consegui me conter até o dia 23.&lt;/p&gt;

&lt;p&gt;Depois da minha palestra eu mostrei o livro e foi uma sensação fantástica
mostrar para todos os amigos um trabalho que eu tanto me orgulho. Foram &lt;strong&gt;315
horas&lt;/strong&gt; e &lt;strong&gt;8 meses&lt;/strong&gt; de trabalho que valeram a pena.&lt;/p&gt;

&lt;h3&gt;Conclusão&lt;/h3&gt;

&lt;p&gt;Não escrevi esse livro com a finalidade de ganhar dinheiro. A primeira dica que
um amigo me deu quando eu disse que ia escrever foi: &amp;ldquo;Você sabe que
financeiramente não compensa, né?&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;É sempre bom ter uma segunda renda para remunerar essas 315 horas investidas,
mas não foi o principal motivador da minha escrita. Pode parecer bobo, mas eu
escrevi esse livro por que eu &lt;strong&gt;realmente acredito&lt;/strong&gt; que ele vai ser útil para
as pessoas.&lt;/p&gt;

&lt;p&gt;Esse é o primeiro livro e provavelmente não será o último&amp;hellip; Que venham os
próximos! :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rubyconf 2016</title>
    <link rel="alternate" href="http://pothix.com/2016/09/26/rubyconf-2016.html"/>
    <id>http://pothix.com/2016/09/26/rubyconf-2016.html</id>
    <published>2016-09-25T21:00:00-03:00</published>
    <updated>2017-03-04T18:12:20-03:00</updated>
    <author>
      <name>Willian Molinari (a.k.a PotHix)</name>
    </author>
    <content type="html">&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: A melhor Rubyconf que eu participei&lt;/p&gt;

&lt;p&gt;Nos dias 24 e 25 de Setembro de 2016 aconteceu a Rubyconf Brasil.
Assim como eu
&lt;a href="http://pothix.com/2008/10/21/rails-summit-latin-america.html"&gt;fiz um post sobre o primeiro Rails Summit que o Akita participou da organização&lt;/a&gt;,
resolvi também fazer um post sobre a última rubyconf que ele resolveu
organizar.&lt;/p&gt;

&lt;p&gt;Essa Rubyconf teve vários pontos especialmente importantes para mim. O
&lt;strong&gt;primeiro deles&lt;/strong&gt; foi logo no início quando o Gilberto Mautner, que é um
dos fundadores da Locaweb, mencionou os números do projeto que eu
estou trabalhando por lá.&lt;/p&gt;

&lt;p&gt;Atualmente estou trabalhando em um projeto para melhorar o tempo de
entrega das equipes de desenvolvimento. Para que esse projeto seja bem
sucedido, nós precisamos rever vários processos e arquitetura de
aplicações. O fato dele ser mostrado na introdução da conferência por
ser um projeto legal já diz muito sobre o nosso trabalho.&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;segundo ponto foi a minha palestra&lt;/strong&gt;, que aconteceu no primeiro
dia as 15:45 no andar aberto (os slides estão
&lt;a href="http://cege.la/nzhl40"&gt;aqui&lt;/a&gt;). Para essa palestra eu estava mais
nervoso do que normalmente fico, porque sabia que eu teria que falar
bem rápido se quisesse passar todo o conteúdo no tempo que eu
tinha. Além disso, essa não era uma palestra normal! Eu fiz o
lançamento do
&lt;a href="https://desconstruindoaweb.com.br/?source=pothix.com"&gt;meu livro&lt;/a&gt; no
fim.&lt;/p&gt;

&lt;p&gt;E esse foi o &lt;strong&gt;terceiro ponto&lt;/strong&gt; importante dessa conferência. O livro
estava
&lt;a href="https://www.casadocodigo.com.br/products/livro-desconstruindo-web"&gt;disponível no site da casa do código&lt;/a&gt;
desde o começo do mês, mas eu estava aguardando essa oportunidade para
divulgar. Foi um mês de expectativa para finalmente mostrar um
trabalho que eu me orgulho muito.&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;quarto&lt;/strong&gt; e último ponto que tornou essa conferência especial foi
ser citado no fechamendo. Essa vai ser a última Rubyconf organizada
pelo &lt;a href="https://twitter.com/akitaonrails"&gt;Fabio Akita&lt;/a&gt;. No fechamento da
conferência ele mostrou um review dos últimos 10 anos de organização
de eventos de Ruby e agradeceu as pessoas que estavam participando
desde o começo. Pode parecer bobeira, mas ter seu nome (ou nickname)
citado no final de uma conferência com 1200 pessoas é muito
gratificante. Eu já sou totalmente a favor dos planos do Akita e já
tinha comentado com ele sobre isso há algum tempo atrás. E ele
realmente merece um auditório inteiro de pé aplaudindo seu trabalho
durante esses 10 anos.&lt;/p&gt;

&lt;p&gt;Tudo isso fora os velhos amigos que eu pude rever, pessoas novas que
eu conheci e coisas que eu aprendi. Algumas pessoas eu conversei e não
sabiam que eram as pessoas que eu falava pela internet há muito tempo,
só vim perceber depois. Durante esses vários anos de Rubyconf, eu tive
o prazer de conversar pessoalmente com 2 core commiters do Ruby, e
isso não é uma coisa que temos a chance de fazer com frequência. :)&lt;/p&gt;

&lt;p&gt;Esse é o espírito da Rubyconf, juntar desenvolvedores que gostam de
programar para trocar ideias. Eu considero essa conferência como uma
versão grande do que é o &lt;a href="https://gurusp.org"&gt;Guru-SP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Não sei como vai ser o futuro de conferências como essa. A Locaweb
&lt;a href="https://twitter.com/locaweb/status/779819447087403008"&gt;diz que a Rubyconf continua&lt;/a&gt;,
mas ainda não temos ideia sobre as novidades. Independente do que está
por vir, tenho certeza que esse espirito de camaradagem e busca
contínua de conhecimento vai continuar. :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ouvir livros (audiobooks), o futuro da leitura</title>
    <link rel="alternate" href="http://pothix.com/2016/06/22/audiobooks.html"/>
    <id>http://pothix.com/2016/06/22/audiobooks.html</id>
    <published>2016-06-21T21:00:00-03:00</published>
    <updated>2017-03-04T18:12:20-03:00</updated>
    <author>
      <name>Willian Molinari (a.k.a PotHix)</name>
    </author>
    <content type="html">&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Ouvir livros é o futuro.&lt;/p&gt;

&lt;p&gt;Quem me conhece sabe que há muito tempo eu ouço podcasts sempre que eu
posso, principalmente no caminho entre a minha casa e o trabalho. No
fim do ano de 2015 eu vi a quantidade de livros que o
&lt;a href="https://twitter.com/rafaelrosafu"&gt;Rafael Rosa&lt;/a&gt; leu e fiquei
abismado. Ele leu mais de 90 livros em um ano! Tudo bem que ele estava
em um período sabático, mas mesmo assim ainda é uma quantidade bem
absurda de livros para se ler em um ano.&lt;/p&gt;

&lt;p&gt;Ao conversar melhor o Rafael, descobri que boa parte desses livros
foram lidos via Audiobooks. Ele, assim como eu, sempre foi adepto de
podcasts, mas há um tempo decidiu trocar por audiobooks e falou que
estava indo muito bem assim.&lt;/p&gt;

&lt;p&gt;Eu decidi então que iria tentar um audiolivro em breve para ver se me
adaptava. Lembrei que em poucos dias eu teria que fazer um mapeamento
de retina, o que me deixaria a pupila dilatada durante quase todo o
dia, me deixando sem a possibilidade de fazer muita coisa. Isso se
mostrou ser o momento perfeito para testar audiobooks!&lt;/p&gt;

&lt;p&gt;Resolvi começar com um livro bem antigo chamado: &amp;ldquo;A arte da
guerra&amp;rdquo;. Deixei tudo preparado no meu celular e em uma tarde o livro
estava totalmente lido. O livro é pequeno, mas troquei uma tarde
perdida por um livro lido!&lt;/p&gt;

&lt;p&gt;Resolvi então começar uma &lt;em&gt;quest&lt;/em&gt; para ler mais livros. Para isso eu
precisava de um processo simples e justo de ouvir, portanto testei
várias apps. Vou descrever abaixo os meus testes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://audible.com"&gt;Audible&lt;/a&gt; &amp;ndash; É de longe o melhor serviço que tem para
audiobooks. Tem uma biblioteca bem extensa para livros, possui aceleração de
audio, a compra e download de audiobooks é bem simples e o site é bem fácil de
usar. Um dos problemas é que a grande maioria do livros estão em inglês. Há
alguns livros em português, mas somente os livros muito clássicos como &amp;ldquo;Dom
casmurro&amp;rdquo; por exemplo. No audible, para que você consiga &lt;strong&gt;1&lt;/strong&gt; audiobook por
mês você paga &lt;strong&gt;$15&lt;/strong&gt;, o que dá quase R$70 para nós no brasil, o que é um
valor meio salgado IMO.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scribd.com"&gt;Scribd&lt;/a&gt; &amp;ndash; Está entrando agora na área de audiobooks. A
compra de livros e download do audio foi bem fácil e o serviço possui tanto
livros como audiobooks. O &lt;em&gt;player&lt;/em&gt; ainda não possui a funcionalidade de
acelerar o audio, o que para mim o torna quase inutilizável. O serviço não tem
uma biblioteca tão vasta como a do Audible, mas possui vários livros legais. O
valor é quase metade do valor do Audible e pode ser uma alternativa assim que
implementarem a aceleração de audio.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tocalivros.com"&gt;Tocalivros&lt;/a&gt; &amp;ndash; É a alternativa brasileira de
distribuição e criação de audiobooks. O player deles melhorou muito nos
últimos meses e está quase chegando lá. Infelizmente a quantidade de títulos
bons ainda é bem baixa e nem se compara com serviços gringos ainda.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ubook.com/"&gt;Ubook&lt;/a&gt; &amp;ndash; Esse eu não cheguei a testar para formar uma
opinião, mas resolvi colocar aqui como mais um site brasileiro de
audiobooks. A quantidade de títulos também é bem precária, no mesmo esquema do
tocalivros.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Quando o livro que eu estou lendo não tem narração humana eu vou para a versão
sintetizada. Tem gente que abomina a narração sintetizada, mas para mim não é um
grande problema, desde que eu consiga entender o conteúdo.&lt;/p&gt;

&lt;p&gt;Para quem não conhece, a narração sintetizada é quando você coloca uma voz
sintetizada como a do Google Translate para ler um livro para você. Essa ideia é
muito utilizada por pessoas com deficiência visual, pois não podem depender de
alguém narrando para eles todo o conteúdo e fazem a maquina narrar.&lt;/p&gt;

&lt;p&gt;O que eu uso para narração sintetizada:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.hyperionics.avar"&gt;@Voice&lt;/a&gt;
&amp;ndash; De todos que eu testei esse foi o que eu mais gostei. O esquema de voz é
aceitável e é fácil de ajustar a velocidade. Ele também integra com o
&lt;a href="https://getpocket.com"&gt;Pocket&lt;/a&gt; caso você queira ouvir os seus artigos.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=br.com.livrariasaraiva.ereader.andr2&amp;amp;hl=pt-br"&gt;Lev Saraiva&lt;/a&gt;
&amp;ndash; O Lev é o leitor da Saraiva e suporta narração sintetizada. A parte boa
dele é que você pode comprar os livros direto na Saraiva e integrar com
ele. Na teoria é uma ótima ideia mas na prática não funcionou muito bem para
mim.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A &lt;a href="http://www.fundacaodorina.org.br/"&gt;fundação Dorina nowill&lt;/a&gt; para cegos tem
vários audiobooks narrados, mas só tem acesso os deficientes visuais que fizerem
um cadastro bem extenso e pelo que eu li eles recebem um CD com o audio. Existe
uma lei que quem tem deficiência visual não precisa pagar por esse tipo de
conteúdo e a fundação pode disponibilizar gratuitamente, mas pelo visto eles
fazem um controle legal para manter o copyright e etc.&lt;/p&gt;

&lt;p&gt;Obviamente, boa parte desse conteúdo está aberto na internet em blogs que acham
e disponibilizam, portanto não é muito difícil de encontrar. Caso você siga por
esse caminho, seja um bom samaritano e compre os livros para remunerar o autor
que gastou centenas de horas da vida dele para escrever o livro que você está
lendo&amp;hellip; É o que eu faço com os livros que eu ouço dessa maneira, alguns eu até
dou de presente.&lt;/p&gt;

&lt;p&gt;Não é todo livro que é legal de se ouvir, alguns são densos demais para que você
consiga compreender bem apenas ouvindo continuamente, mas a grande maioria das
ficções é bem agradável de ouvir. Eu tinha colocado uma meta de 10 livros para
esse ano, e &lt;a href="https://www.goodreads.com/user/show/38970458-pothix"&gt;meu goodreads&lt;/a&gt;
nesse momento está mostrando que eu já li &lt;strong&gt;22&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;Fica aí a dica para quem, como eu, ficava reclamando que não conseguia ler os
livros que queria! :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Experiences of almost two years using colemak</title>
    <link rel="alternate" href="http://pothix.com/2015/10/08/experiences-of-almost-two-years-using-colemak.html"/>
    <id>http://pothix.com/2015/10/08/experiences-of-almost-two-years-using-colemak.html</id>
    <published>2015-10-07T21:00:00-03:00</published>
    <updated>2017-03-04T18:12:20-03:00</updated>
    <author>
      <name>Willian Molinari (a.k.a PotHix)</name>
    </author>
    <content type="html">&lt;p&gt;TL;DR: I like colemak, and it is a &lt;em&gt;very good&lt;/em&gt; layout. I found some equivalent
pros and cons, so I can&amp;rsquo;t recommend it to anyone without a little bit of
philosophy. :)&lt;/p&gt;

&lt;p&gt;For those who don&amp;rsquo;t know &lt;a href="http://colemak.com/"&gt;Colemak&lt;/a&gt;, it is a keyboard layout
created to make the most used keys stay in the home row as well as make you
swipe between your right and left hand.&lt;/p&gt;

&lt;p&gt;There is a
&lt;a href="http://www.patrick-wied.at/projects/heatmap-keyboard/"&gt;keyboard layouts heatmap&lt;/a&gt;
for you to understand the benefits of using a keyboard layout that was designed
to help you to be confortable and fast when typing instead of one that
&lt;a href="https://en.wikipedia.org/wiki/QWERTY"&gt;helping the operator to not jam the typewriter&lt;/a&gt;.
I tried some code (python), English and Portuguese texts and it looks almost the
same on the heatmap.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m using Colemak since Dec, 25 of 2013 and here are come pros and cons that I
found:&lt;/p&gt;

&lt;p&gt;The first con is that I don&amp;rsquo;t know how to type fast on qwerty anymore, now I&amp;rsquo;m
typing as I never saw a qwerty layout before. The problem is that everyone uses
this crappy layout and sometimes you need to use it to write and it makes you
look like a granpa. The good part is that I almots don&amp;rsquo;t need to use qwerty, all
devices that belog to me I&amp;rsquo;ve changed to colemak (computers, cellphones and so
on), so I just need to use qwerty when I&amp;rsquo;m typing on other peoples devices.&lt;/p&gt;

&lt;p&gt;A pro is that my typing speed grew from an average of 75 WPM to almost 100
WPM. I need to consider that I also bought a Kinesis Advantage Pro;&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/posts/almost-two-years-using-colemak-kinesis-df04aec3.jpg" title="Kinesis Advantage" alt="Kinesis advantage photo" /&gt;&lt;/p&gt;

&lt;p&gt;Without this keyboard I&amp;rsquo;m not that fast. Just tried
&lt;a href="http://10fastfingers.com/user/504663/"&gt;10fastfingers now and got 92 WPM&lt;/a&gt; using
my laptop&amp;rsquo;s keyboard.&lt;/p&gt;

&lt;p&gt;Another pro is that I really feel confortable using Colemak, you the same way as
being an experienced Vim user, looks like you don&amp;rsquo;t need to type so much. :)&lt;/p&gt;

&lt;p&gt;Now, talking about Vim&amp;hellip; I&amp;rsquo;m an experienced Vim user, but Vim is totally
coupled with qwerty layout. I tried to remap some keys (like hjkl for example)
in order to keep using the home row to navigate but it was not very good. Totay
I&amp;rsquo;m just using plain colemak layout on Vim and it is not so good as it was on
qwerty. For this reason I decided to try a new editor and I&amp;rsquo;m using Emacs
now. :)&lt;/p&gt;

&lt;p&gt;It took me at least a month to get back to my old typing speed, I was training
everyday on 10fastfinges to get used to the layout. In the beginning you may
feed some headaches because of the mind remapping. It&amp;rsquo;s not so easy to change
something that you thought was the only way of getting things done. It was a
great challenge for me and it just seems right, I don&amp;rsquo;t wanna use a keyboard
layout that was made to avoid jams on a typewriter, Jesus, we&amp;rsquo;re in 2015 and
there is not typewriters anymore.&lt;/p&gt;

&lt;p&gt;Hope this post helps a lot of colemak newcommers and the only thing I could say
about my journey is that &lt;strong&gt;I would do it again if I could&lt;/strong&gt;. :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>As escolhas do desenvolvedor</title>
    <link rel="alternate" href="http://pothix.com/2015/08/31/as-escolhas-do-desenvolvedor.html"/>
    <id>http://pothix.com/2015/08/31/as-escolhas-do-desenvolvedor.html</id>
    <published>2015-08-30T21:00:00-03:00</published>
    <updated>2017-03-04T18:12:20-03:00</updated>
    <author>
      <name>Willian Molinari (a.k.a PotHix)</name>
    </author>
    <content type="html">&lt;p&gt;Esse ano fui chamado para palestrar em todas as edições do Encontro Locaweb que
acontecem por várias cidades do Brasil! Palestrei em 6 cidades de estados
diferentes, e aconteceram na seguinte ordem:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.flickr.com/photos/locaweb/sets/72157650885375530"&gt;Belo Horizonte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.flickr.com/photos/locaweb/sets/72157651709980410"&gt;Curitiba&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.flickr.com/photos/locaweb/sets/72157649789309524"&gt;Recife&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.flickr.com/photos/locaweb/sets/72157652339858570"&gt;Porto Alegre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.flickr.com/photos/locaweb/sets/72157652754664218"&gt;Rio de Janeiro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.flickr.com/photos/locaweb/sets/72157654905073816"&gt;São Paulo&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Adicionei os links para as fotos dos eventos na listagem acima. :)&lt;/p&gt;

&lt;p&gt;Minha palestra se chama &amp;ldquo;As escolhas do desenvolvedor&amp;rdquo; e fala sobre as escolhas
que fazemos durante nossa carreira de desenvolvedor, escolhas com linguagens,
configurações de servidores, deploy, equipe, testes e etc. A ideia dessa
palestra é mostrar as opções que temos para cada uma dessas etapas.&lt;/p&gt;

&lt;p&gt;Esses são os slides da palestra:&lt;/p&gt;

&lt;iframe src="http://www.slideshare.net/PotHix/slideshelf" width="490px" height="470px" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:none;" allowfullscreen webkitallowfullscreen mozallowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Demorei para publicar esse post porque o encontro Locaweb de São Paulo
foi gravado e eu estava esperando liberarem os vídeos para eu poder
publicar junto com o post.&lt;/p&gt;

&lt;p&gt;Para assistir é só se increver no
&lt;a href="https://www.eventials.com/locaweb/groups/17o-encontro-locaweb-de-profissionais-de-internet/"&gt;grupo do encontro Locaweb na eventials&lt;/a&gt;
e assistir
&lt;a href="https://www.eventials.com/locaweb/as-escolhas-do-desenvolvedor-com-willian-molinari-a-k-a-pothix/"&gt;nesse link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Obrigado a todos que prestigiaram o evento e espero ter contribuído com alguma
coisa legal com a palestra.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>OSCON 2015</title>
    <link rel="alternate" href="http://pothix.com/2015/07/27/oscon.html"/>
    <id>http://pothix.com/2015/07/27/oscon.html</id>
    <published>2015-07-26T21:00:00-03:00</published>
    <updated>2017-03-04T18:12:20-03:00</updated>
    <author>
      <name>Willian Molinari (a.k.a PotHix)</name>
    </author>
    <content type="html">&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; I&amp;rsquo;ve been at OSCON this year (thanks to
&lt;a href="http://locaweb.com.br"&gt;Locaweb&lt;/a&gt;) and this post will summarize my
impressions about the conference. I spoke at Locaweb Tech-Talks about it and
&lt;a href="https://docs.google.com/presentation/d/1yR7aEIVJdznAASNvaNW0AjUDmgA5qvOstOHhSP1JLDM/pub?start=false&amp;amp;loop=false&amp;amp;delayms=3000"&gt;you can find my slides
here&lt;/a&gt;
(in portuguese).&lt;/p&gt;

&lt;p&gt;&lt;a href="http://oscon.com"&gt;OSCON (Open Source Conference)&lt;/a&gt; is one of the most
important open source conferences of our time and happened in Portland
this year as usual.  Portland is a great city, the one I liked the
most until now, it doesn&amp;rsquo;t have high car traffic, MAX (the train) took
us for most of the places we wanted to know, nice people all over the
place, great convention center and a lot of other benefits.&lt;/p&gt;

&lt;h3&gt;July, 20&lt;/h3&gt;

&lt;p&gt;The conference started at 9:00 am of July 20, 2015 with the first day of
tutorials. In the first day I followed the &lt;strong&gt;Kubernetes tutorial&lt;/strong&gt; and it was cool.
I had the chance to talk with Google guys about it and try Google
Computing Engine, which was very nice.&lt;/p&gt;

&lt;h3&gt;July, 21&lt;/h3&gt;

&lt;p&gt;The second day was filled with more tutorials and I chose RUST and Cassandra.&lt;/p&gt;

&lt;h4&gt;RUST&lt;/h4&gt;

&lt;p&gt;Was a good tutorial with a lot of exercises and good tips of the
language. I really liked it and I&amp;rsquo;ll probably give
&lt;a href="http://rust-lang.org/"&gt;Rust&lt;/a&gt; a try on the next months.&lt;/p&gt;

&lt;h4&gt;Cassandra&lt;/h4&gt;

&lt;p&gt;I was expecting a different thing from this one. It was based on how
to use &lt;a href="http://cassandra.apache.org/"&gt;cassandra&lt;/a&gt;, create tables and so
on and I was expecting tips on how to create and scale it and maybe a
little bit about the caveats we may found on the way. But it wasn&amp;rsquo;t
bad at all, I&amp;rsquo;ve learned a little bit on how to use it and as a gift I
tried a little bit of spark as well.&lt;/p&gt;

&lt;p&gt;At the end of this day the Expo hall opened for everyone, cool things there
(including some T-shirts&amp;hellip; T-shirts everywhere).&lt;/p&gt;

&lt;h3&gt;July, 22&lt;/h3&gt;

&lt;p&gt;Let the conference begin! :)&lt;/p&gt;

&lt;p&gt;It started with the keynotes at 9:00 and I would like to highlight one of them.
All keynotes &lt;a href="https://www.youtube.com/playlist?list=PL055Epbe6d5YhDchEvY3O4nIuSLYyrx7K"&gt;are avaiable on
youtube&lt;/a&gt;
btw. :)&lt;/p&gt;

&lt;h4&gt;Facebook open source at scale (Keynote)&lt;/h4&gt;

&lt;p&gt;I like to understand the open source culture behind these big
companies. It is really interesting to know that there are only &lt;em&gt;2&lt;/em&gt;
people to handle all the facebook open source process shocked me a
litte bit. They have a great open source review and publishing process
and all the softwares they release are running in their production
environment. So, why do they do open source software? Because it&amp;rsquo;s
good for the company, helps them to make better software and bring
smart people to work with them.&lt;/p&gt;

&lt;p&gt;And then the multiple sessions started, a lot of great subjects in the agenda
and you have to choose one (!!!).&lt;/p&gt;

&lt;h4&gt;Roller Coaster Tycoon with genetic algorithms and Go&lt;/h4&gt;

&lt;p&gt;The speaker
&lt;a href="https://kev.inburke.com/kevin/roller-coaster-tycoon-genetic-algorithms/"&gt;Kevin Burke&lt;/a&gt;
spoke about his hobbie of playing with
&lt;a href="https://en.wikipedia.org/wiki/RollerCoaster_Tycoon"&gt;roller coaster tycoon&lt;/a&gt;
game maps with Go and Genetic Algorithms in order to create de best
roller coaster ever! It is not there already but the presention was
really cool to follow.&lt;/p&gt;

&lt;h4&gt;You type &amp;ldquo;google.com&amp;rdquo; into your browser bar and press enter: What happens next?&amp;ldquo;&lt;/h4&gt;

&lt;p&gt;The speaker for this talk is
&lt;a href="https://twitter.com/mathie"&gt;Graeme Mathieson&lt;/a&gt;. I was planning to
spoke about it before de last edition of
&lt;a href="http://devinsampa.com.br/"&gt;DevInSampa&lt;/a&gt; (2012? Btw, it could happen
again&amp;hellip;) but didn&amp;rsquo;t had the guts to make it yet and there it is,
someone made it before me. The pace of the presentation was not good
but the content was cool (it was his first presentation). At least it
made me think more about this topic and &lt;em&gt;maybe&lt;/em&gt; I&amp;rsquo;ll try to speak
about it soon.&lt;/p&gt;

&lt;p&gt;After the lunch I tried to attend to &lt;strong&gt;Evolution of information
security threats&lt;/strong&gt; presentation but the room was full, so decided to
go to &lt;a href="http://matrix.org/"&gt;Matrix&lt;/a&gt; guys presentation.&lt;/p&gt;

&lt;h4&gt;Fixing the fragmentation problem for real-time communications&lt;/h4&gt;

&lt;p&gt;Matrix&amp;rsquo;s is really interesting, the main idea is to make a
protocol for messages, just like the email protocols do for our
email, we may use our client and store our own email but it is not
possible with today&amp;rsquo;s messaging like hangouts, whatsapp, telegram,
skype and so on. They had a live demo piloting a quadricopter via
chat, it was really cool.&lt;/p&gt;

&lt;h4&gt;High adventures in sniffing my own metadata&lt;/h4&gt;

&lt;p&gt;The speaker is &lt;a href="http://matrix.org/"&gt;Josh Deprez&lt;/a&gt; from Google
Australia. He described his work using a Go program (home made) to
analize his own internet traffic and which information he got on
it. The presentation itself was cool to follow but the discoveries
wasn&amp;rsquo;t so much interesting. :P&lt;/p&gt;

&lt;h4&gt;Building the $9 computer, or how I learned to stop worrying and love embedded Linux&lt;/h4&gt;

&lt;p&gt;This is the
&lt;a href="https://www.kickstarter.com/projects/1598272670/chip-the-worlds-first-9-computer"&gt;C.H.I.P project&lt;/a&gt;
owner &lt;strong&gt;Dave Rauchwerk&lt;/strong&gt; speaking about the story behind the
project. This guy is hilarious and a real hacker, he made a gif camera
just for the lulz and tried a product with it!  Unfortunately it was
too expensive, to be viable for selling, so he decided to create
C.H.I.P to make the camera cheaper and C.H.I.P became the product by
itself.&lt;/p&gt;

&lt;h4&gt;Continuous delivery and large microservice architectures: Reflections on Ioncannon&lt;/h4&gt;

&lt;p&gt;This last one was really interesting &lt;strong&gt;Kevin Scaldeferri&lt;/strong&gt; from
&lt;a href="http://newrelic.com"&gt;New Relic&lt;/a&gt; spoke about how they grown from a big
and monolythic Rails application to 250 microservices. In short, it
was a mess in the beginning, a lot of techlologies and deploy tools
until they organized and found a standard for the language and deploy
tools, it is really better now, but the old Rails app is still there.&lt;/p&gt;

&lt;h3&gt;July, 23&lt;/h3&gt;

&lt;p&gt;A new day with an typical American breakfast at Denny&amp;rsquo;s and starting
with keynotes at 9:00 AM again.&lt;/p&gt;

&lt;h4&gt;Making architecture matter (Keynote)&lt;/h4&gt;

&lt;p&gt;&lt;a href="http://www.martinfowler.com/"&gt;Martin Fowler&lt;/a&gt; spoke about architecture
in general, there was some good quotes. One of the arguments that
really make sense is that the today&amp;rsquo;s &amp;quot;Architect&amp;rdquo; is that guy that
don&amp;rsquo;t write code (!?). How can a professional that doesn&amp;rsquo;t write code
talk about how to write code? Another good point was about the user
perspective about architecture it can&amp;rsquo;t see it anywhere but still need
to pay for it! We need to argue using economic principles in order to
be able to create a good architecture for our softwares because
economics always win.&lt;/p&gt;

&lt;p&gt;We have a lot of examples of products that were the market leader for their
segment and it could not evolve anymore to the point that it was swallowed by
another competitor. This is a sign of bad architecture.&lt;/p&gt;

&lt;h4&gt;You code like a sysadm&lt;/h4&gt;

&lt;p&gt;hm&amp;hellip; This talk was not so good but it left a message for everyone:
&amp;ldquo;Bad code is still better than no code at all&amp;rdquo;&lt;/p&gt;

&lt;p&gt;And obviously: Good code is better than bad code.&lt;/p&gt;

&lt;p&gt;So, instead of not doing something because you think your code is not good
enough, do it and improve as soon as possible.&lt;/p&gt;

&lt;h4&gt;When Performance Counts: C++ in the 21st Century&lt;/h4&gt;

&lt;p&gt;The speaker threw some good arguments that haven&amp;rsquo;t came to my mind until this
day: &amp;ldquo;Why is C++ getting more attention these days?&amp;rdquo;, we have C++11 being
created and more people talking about it. In his words, the world was not in
need for performance anymore, we had big computers and most of time the other
languages (java, in his examples) are doing a good job to create what is needed
without the need to manage memory by hand. But today we have some other
hardwares that need this performance back, like tablets, mobile devices, cloud
applications that pays based on cpu time and so on. Good catch man! :)&lt;/p&gt;

&lt;h4&gt;Creating an open source office: Lessons from Twitter&lt;/h4&gt;

&lt;p&gt;I made a bad choice based on the presentation title and changed rooms as fast as
I could to follow this one.&lt;/p&gt;

&lt;p&gt;Some notes on the presentation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ensure projects have owners or give it to the community: this is the
twitter example of
&lt;a href="http://getbootstrap.com/2.3.2/"&gt;Twitter bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Always say Thank you for your project collaborators&lt;/li&gt;
&lt;li&gt;Lessons from &lt;a href="http://mesos.apache.org/"&gt;mesos&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Apple uses mesos for Siri&lt;/li&gt;
&lt;li&gt;Open source foundations force good pactices on you (incubated aurora)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Lessons for &lt;a href="https://github.com/twitter/twemcache"&gt;twencache&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Keep track with the upstream if you fork something&lt;/li&gt;
&lt;li&gt;Share your code with some peers to gauge interest&lt;/li&gt;
&lt;li&gt;open source project with collaborators is better&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A good lesson that I got from this presentation is that community
doesn&amp;rsquo;t come for free. Companies like Twitter have their own community
managers, conference speakers, conference organizers, documentation
writers and their developers to make everyone engaged with the
project. Throw something on github and expect collaboration is not the
best idea for OSS.&lt;/p&gt;

&lt;p&gt;Your employess may become open source celebrities sometimes, and if they became
popular they may leave the company. It is not so good for the company but the
same popular projects may attact new talents as well. :)&lt;/p&gt;

&lt;p&gt;Troll&amp;rsquo;s are everywhere and youy will always hear that your project is stupid and
useless. The best way to deal with it is to take it as a compliment because
people care enough to say it.&lt;/p&gt;

&lt;h4&gt;Mesos the OS for your datacenter&lt;/h4&gt;

&lt;p&gt;David Greenberg from &lt;a href="http://www.twosigma.com/"&gt;Two sigma&lt;/a&gt; spoke about how they
built their own &lt;a href="http://mesos.apache.org/"&gt;mesos&lt;/a&gt; framework.&lt;/p&gt;

&lt;p&gt;Mesos has a high level API to do things and you don&amp;rsquo;t need to care about the
resources. It provide an algorith called
&lt;a href="https://www.cs.berkeley.edu/~alig/papers/drf.pdf"&gt;DRF&lt;/a&gt; for a fair allocation of
resources.&lt;/p&gt;

&lt;p&gt;There are several built frameworks for mesos like Marathon, Aurora, Jenkins and
some more. It&amp;rsquo;s easy to build your own framework (netflix, twitter, apple and
two sigma have it). A good reason to build your own is to deal with some exotic
workload, this default frameworks are built for small tasks.&lt;/p&gt;

&lt;p&gt;For me, mesos is the future and I&amp;rsquo;ll definitely be looking for it.&lt;/p&gt;

&lt;h3&gt;July, 24&lt;/h3&gt;

&lt;p&gt;This was the last day of the conference and it started with 3 keynotes. After the
keynotes there was two sessions more and the conference ending at the main ballroom.&lt;/p&gt;

&lt;h4&gt;Hacking Conway&amp;rsquo;s Lay (Keynote)&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;organizations which design systems &amp;hellip; are constrained to produce designs which are copies of the communication structures of these organizations
—M. Conway[2]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When rebuilding a system it&amp;rsquo;s really important to think about your team because
it will be part of its architecture like conway&amp;rsquo;s law says. So when a decision
is made to build a new system without changing the way people work you will face
the same problems the other system had but with a different code.&lt;/p&gt;

&lt;p&gt;Doesn&amp;rsquo;t matter if you&amp;rsquo;re using microservices but your team is still monolithic.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To solve technical problems, you often have to go outside the technical domain.
Raffi Krikorian&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Good points that ended the presentation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s not all about the code!&lt;/li&gt;
&lt;li&gt;Small teams can do big things.&lt;/li&gt;
&lt;li&gt;Full stack teams keeps your architecture flexible.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t fight Conway&amp;rsquo;s Law, work with it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A lot of good lessons learnt from this one. :)&lt;/p&gt;

&lt;h4&gt;Build a botnet?&lt;/h4&gt;

&lt;p&gt;The speaker (&lt;a href="http://fossetcon.org"&gt;Bryan Smith&lt;/a&gt;) did a great (and funny :P)
presentation around the topic. And some things are really scary when speaking
about botnets. The most scary thing for me was its price, you can use a botnet
for an hour spending only $5&amp;hellip; it is really low and probably will get a service
out of business for that time. There are some softwares avalable if you want to
build your own botnet these days (accorting to Bryan, if you want to build a
botnet you&amp;rsquo;re probably a scumbag&amp;hellip; LOL), here are some of them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;citadel&lt;/li&gt;
&lt;li&gt;kreios C2&lt;/li&gt;
&lt;li&gt;Andromeda V2.6 - leaked&lt;/li&gt;
&lt;li&gt;Kaiten IRC bot&lt;/li&gt;
&lt;li&gt;SDBot - GPL&lt;/li&gt;
&lt;li&gt;DSNX Bots&lt;/li&gt;
&lt;li&gt;Q8 Bots&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;ll not post links here but you can google them if you really want it. :P&lt;/p&gt;

&lt;p&gt;The most funny part of the presentation was its end when the speaker laptop got
rebooted when trying to bring the botnet up. LOL&lt;/p&gt;

&lt;h4&gt;Freedom and responsibility @Netflix: Centralized team in a decentralized world&lt;/h4&gt;

&lt;p&gt;One of the best presentations of the
conference. &lt;a href="http://www.mikemcgarr.com/about.html"&gt;Mike McGarr&lt;/a&gt; spoke
about his team (tools team) role at
&lt;a href="http://techblog.netflix.com/"&gt;Netflix&lt;/a&gt; and the hacker culture there.&lt;/p&gt;

&lt;p&gt;One of the team roles is to increase the rate of innovation and reduce
the impact of change by providing good tools for the other teams. Their clients
are the other teams engineers, it&amp;rsquo;s not a simple internal system it&amp;rsquo;s a product!&lt;/p&gt;

&lt;p&gt;Netflix has a
&lt;a href="http://www.slideshare.net/reed2001/culture-1798664"&gt;great culture&lt;/a&gt; and each
team as a subset of this culture.&lt;/p&gt;

&lt;p&gt;Netflix has a lot of good tools but the engineers may choose to not use it and
build their own in case it doesn&amp;rsquo;t fix their problems. For this reason there are
4 deploy tools running on Netflix actually.&lt;/p&gt;

&lt;p&gt;They have no Ops team, you build it, you support it! And in order to remove part
of the constant interruptions, the team uses a &amp;ldquo;responder rotation&amp;rdquo; when each
time (day, week, month?) a new engineer will be in charge of solving problems
and helping the other teams.&lt;/p&gt;

&lt;p&gt;They (like many of us) don&amp;rsquo;t like ticket systems, but they use it anyway (like
many of us?). For this case the tip is: Make creating a ticket easy, minimize
fraction by making it as easy and fast as possible.&lt;/p&gt;

&lt;p&gt;Hackatons are made between the team in order to keep the innovation process
flowing and making space for innovation. Another good thing to think about is to
always hire beyond your needs, it makes more space for innovation (not all
people working on day to day tasks) and it will be really helpful when the
project is on fire and the team needs more intensity on it.&lt;/p&gt;

&lt;p&gt;Communication is really important for the teams and they do not set a limitation
for important communications like framework versions and DC migrations. For this
task they use hipchat, email, banners and everything that may call the
engineers&amp;rsquo; attention.&lt;/p&gt;

&lt;h4&gt;Situation normal, everything must change&lt;/h4&gt;

&lt;p&gt;This was the last keynote and maybe the best one, and I highly recommend you to
&lt;a href="https://www.youtube.com/watch?v=Ty6pOVEc3bA"&gt;watch it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Simon Wardley used the fact that OSCON is moving to speak about situation
awareness and what could happen when you&amp;rsquo;re not prepared for a new thing.&lt;/p&gt;

&lt;p&gt;His arguments are that we&amp;rsquo;re using the wrong maps to try to understand our
problems. In business we use &lt;a href="https://en.wikipedia.org/wiki/SWOT_analysis"&gt;SWOT&lt;/a&gt;
for example, which is really bad to understand to understand the whole picture,
it was really funny to see his comparisons with
&lt;a href="https://en.wikipedia.org/wiki/Battle_of_Thermopylae"&gt;the battle of the 300&lt;/a&gt;
using a SWAT map instead of land map. LOL&lt;/p&gt;

&lt;p&gt;The speaker shows some maps he uses for his business, and it looks really better
than just a SWOT. :)&lt;/p&gt;

&lt;p&gt;Again, I really recommend you
&lt;a href="https://www.youtube.com/watch?v=Ty6pOVEc3bA"&gt;watch this talk&lt;/a&gt;. I liked it. :)&lt;/p&gt;

&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;The best conference I ever attended. Everything was great: hotel, Portland
Conference Center, the city in general, the food, the conference content and so
on. It definitely worth the 14 hours plane travel to be there.&lt;/p&gt;

&lt;p&gt;I would live in a city like Portland, it is one of the best cities I ever
visited. I&amp;rsquo;m sad to know that the next OSCON will happen in Austin instead of
Portland. :(&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>New layout of PotHix blog</title>
    <link rel="alternate" href="http://pothix.com/2015/05/25/new-layout-of-pothix-blog.html"/>
    <id>http://pothix.com/2015/05/25/new-layout-of-pothix-blog.html</id>
    <published>2015-05-24T21:00:00-03:00</published>
    <updated>2017-03-04T18:12:20-03:00</updated>
    <author>
      <name>Willian Molinari (a.k.a PotHix)</name>
    </author>
    <content type="html">&lt;p&gt;Welcome to the new blog layout of PotHix.com! :)&lt;/p&gt;

&lt;p&gt;I decided that the time has came to change not just the layout but the blog
engine as well. I&amp;rsquo;m now using middleman instead of wordpress. Just to be clear,
I don&amp;rsquo;t think wordpress is not good at all, but I want to publish static files
instead of keeping the wordpress &amp;ldquo;infrastructure&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve divided into 3 feeds:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Only english posts: &lt;a href="http://feeds.feedburner.com/EnglishPotHix"&gt;http://feeds.feedburner.com/EnglishPotHix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;All posts: &lt;a href="http://feeds.feedburner.com/PotHix"&gt;http://feeds.feedburner.com/PotHix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Posts related to programming or technology in genenal: &lt;a href="http://feeds.feedburner.com/PotHixTech"&gt;http://feeds.feedburner.com/PotHixTech&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, that&amp;rsquo;s it! Hope you enjoy the new layout (now responsive!) and get in touch! :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ruby, Python e native threads</title>
    <link rel="alternate" href="http://pothix.com/2014/02/14/ruby-python-e-native-threads.html"/>
    <id>http://pothix.com/2014/02/14/ruby-python-e-native-threads.html</id>
    <published>2014-02-13T22:00:00-02:00</published>
    <updated>2017-03-04T18:12:20-03:00</updated>
    <author>
      <name>Willian Molinari (a.k.a PotHix)</name>
    </author>
    <content type="html">&lt;p&gt;Pode ser que eu seja meio burro (heheh) mas eu ainda achava que o Ruby e o
Python usavam Green Threads, mas depois de conversar com uma galera me disseram
que eram threads nativas. Pesquisando na internet eu vi que eram mesmo, mas decidi
rodar um strace para ver elas rolando e postar sobre isso.&lt;/p&gt;

&lt;p&gt;Fiz dois scripts simples:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&lt;table class="rouge-table"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="rouge-gutter gl"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class="rouge-code"&gt;&lt;pre&gt;import threading
import time
for i in range(5):
    t = threading.Thread(target=time.sleep, args=(1,))
    t.start()
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&lt;table class="rouge-table"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="rouge-gutter gl"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class="rouge-code"&gt;&lt;pre&gt;require 'thread'
5.times do
  Thread.new {sleep 10}
end
sleep 1
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Rodando o script python com o comando &lt;code&gt;strace -f -e clone,fork python thread.py&lt;/code&gt; retorna pouca coisa:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&lt;table class="rouge-table"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="rouge-gutter gl"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
&lt;/pre&gt;&lt;/td&gt;&lt;td class="rouge-code"&gt;&lt;pre&gt;clone(Process 13920 attached
child_stack=0x7f8570b67ff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7f8570b689d0, tls=0x7f8570b68700, child_tidptr=0x7f8570b689d0) = 13920
[pid 13919] clone(Process 13921 attached
child_stack=0x7f856bffeff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7f856bfff9d0, tls=0x7f856bfff700, child_tidptr=0x7f856bfff9d0) = 13921
[pid 13919] clone(Process 13922 attached
child_stack=0x7f856b7fdff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7f856b7fe9d0, tls=0x7f856b7fe700, child_tidptr=0x7f856b7fe9d0) = 13922
[pid 13919] clone(Process 13923 attached
child_stack=0x7f856affcff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7f856affd9d0, tls=0x7f856affd700, child_tidptr=0x7f856affd9d0) = 13923
[pid 13919] clone(Process 13924 attached
child_stack=0x7f856a7fbff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7f856a7fc9d0, tls=0x7f856a7fc700, child_tidptr=0x7f856a7fc9d0) = 13924
[pid 13921] +++ exited with 0 +++
[pid 13920] +++ exited with 0 +++
[pid 13924] +++ exited with 0 +++
[pid 13922] +++ exited with 0 +++
[pid 13923] +++ exited with 0 +++
+++ exited with 0 +++
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Conseguimos ver claramente as 5 threads do SO aí em cima. :)&lt;/p&gt;

&lt;p&gt;Já no ruby, rodando com o mesmo esquema (&lt;code&gt;strace -f -e clone,fork ruby thread.rb&lt;/code&gt;) retorna bem mais coisas:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&lt;table class="rouge-table"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="rouge-gutter gl"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
&lt;/pre&gt;&lt;/td&gt;&lt;td class="rouge-code"&gt;&lt;pre&gt;clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14588
Process 14588 attached
[pid 14588] clone(Process 14589 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14589
[pid 14588] clone(Process 14590 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14590
[pid 14589] +++ exited with 1 +++
[pid 14590] +++ exited with 0 +++
[pid 14588] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14589, si_status=1, si_utime=0, si_stime=0} ---
[pid 14588] +++ exited with 0 +++
--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14588, si_status=0, si_utime=0, si_stime=0} ---
clone(Process 14591 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14591
[pid 14591] +++ exited with 0 +++
--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14591, si_status=0, si_utime=0, si_stime=0} ---
clone(Process 14592 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14592
[pid 14592] clone(Process 14593 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14593
[pid 14593] +++ exited with 0 +++
[pid 14592] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14593, si_status=0, si_utime=0, si_stime=0} ---
[pid 14592] clone(Process 14594 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14594
[pid 14594] clone(Process 14595 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14595
[pid 14595] +++ exited with 1 +++
[pid 14594] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14595, si_status=1, si_utime=0, si_stime=0} ---
[pid 14594] +++ exited with 0 +++
[pid 14592] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14594, si_status=0, si_utime=0, si_stime=0} ---
[pid 14592] +++ exited with 0 +++
--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14592, si_status=0, si_utime=0, si_stime=0} ---
clone(Process 14596 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14596
[pid 14596] +++ exited with 0 +++
--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14596, si_status=0, si_utime=0, si_stime=0} ---
clone(Process 14597 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fd34d4569d0) = 14597
[pid 14597] clone(Process 14598 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f1df327b9d0) = 14598
[pid 14598] +++ exited with 0 +++
[pid 14597] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14598, si_status=0, si_utime=0, si_stime=0} ---
[pid 14597] clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f1df327b9d0) = 14599
Process 14599 attached
[pid 14599] clone(Process 14600 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f1df327b9d0) = 14600
[pid 14600] clone(Process 14601 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fb4232139d0) = 14601
[pid 14601] clone(Process 14602 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fb4232139d0) = 14602
[pid 14602] +++ exited with 0 +++
[pid 14601] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14602, si_status=0, si_utime=0, si_stime=0} ---
[pid 14601] +++ exited with 0 +++
[pid 14600] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14601, si_status=0, si_utime=0, si_stime=0} ---
[pid 14600] +++ exited with 0 +++
[pid 14599] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14600, si_status=0, si_utime=0, si_stime=0} ---
[pid 14599] +++ exited with 0 +++
[pid 14597] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14599, si_status=0, si_utime=0, si_stime=0} ---
[pid 14597] +++ exited with 0 +++
--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14597, si_status=0, si_utime=0, si_stime=0} ---
clone(Process 14603 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fd34d4569d0) = 14603
[pid 14603] clone(Process 14604 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fb42e4469d0) = 14604
[pid 14604] +++ exited with 0 +++
[pid 14603] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14604, si_status=0, si_utime=0, si_stime=0} ---
[pid 14603] clone(Process 14605 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fb42e4469d0) = 14605
[pid 14605] clone(Process 14606 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fb27c11e9d0) = 14606
[pid 14606] clone(Process 14607 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fb27c11e9d0) = 14607
[pid 14606] clone(Process 14608 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fb27c11e9d0) = 14608
[pid 14607] +++ exited with 1 +++
[pid 14608] +++ exited with 0 +++
[pid 14606] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14607, si_status=1, si_utime=0, si_stime=0} ---
[pid 14606] +++ exited with 0 +++
[pid 14605] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14606, si_status=0, si_utime=0, si_stime=0} ---
[pid 14605] +++ exited with 0 +++
[pid 14603] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14605, si_status=0, si_utime=0, si_stime=0} ---
[pid 14603] +++ exited with 0 +++
--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14603, si_status=0, si_utime=0, si_stime=0} ---
clone(Process 14609 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fd34d4569d0) = 14609
[pid 14609] clone(Process 14610 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f2136e3e9d0) = 14610
[pid 14610] clone(Process 14611 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f2136e3e9d0) = 14611
[pid 14610] clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f2136e3e9d0) = 14612
Process 14612 attached
[pid 14611] +++ exited with 1 +++
[pid 14612] +++ exited with 0 +++
[pid 14610] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14611, si_status=1, si_utime=0, si_stime=0} ---
[pid 14610] +++ exited with 0 +++
[pid 14609] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14610, si_status=0, si_utime=0, si_stime=0} ---
[pid 14609] +++ exited with 0 +++
--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14609, si_status=0, si_utime=0, si_stime=0} ---
clone(child_stack=0x7fa6a3eedff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fa6a3eee9d0, tls=0x7fa6a3eee700, child_tidptr=0x7fa6a3eee9d0) = 14613
Process 14613 attached
[pid 14587] clone(Process 14614 attached
child_stack=0x7fa6a27bdff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fa6a27be9d0, tls=0x7fa6a27be700, child_tidptr=0x7fa6a27be9d0) = 14614
[pid 14587] clone(Process 14615 attached
child_stack=0x7fa6a25bbff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fa6a25bc9d0, tls=0x7fa6a25bc700, child_tidptr=0x7fa6a25bc9d0) = 14615
[pid 14587] clone(Process 14616 attached
child_stack=0x7fa6a23b9ff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fa6a23ba9d0, tls=0x7fa6a23ba700, child_tidptr=0x7fa6a23ba9d0) = 14616
[pid 14587] clone(Process 14617 attached
child_stack=0x7fa6a21b7ff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fa6a21b89d0, tls=0x7fa6a21b8700, child_tidptr=0x7fa6a21b89d0) = 14617
[pid 14587] clone(Process 14618 attached
child_stack=0x7fa6a1fb5ff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fa6a1fb69d0, tls=0x7fa6a1fb6700, child_tidptr=0x7fa6a1fb69d0) = 14618
[pid 14614] +++ exited with 0 +++
[pid 14615] +++ exited with 0 +++
[pid 14616] +++ exited with 0 +++
[pid 14617] +++ exited with 0 +++
[pid 14618] +++ exited with 0 +++
[pid 14613] +++ exited with 0 +++
+++ exited with 0 +++
clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14588
Process 14588 attached
[pid 14588] clone(Process 14589 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14589
[pid 14588] clone(Process 14590 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14590
[pid 14589] +++ exited with 1 +++
[pid 14590] +++ exited with 0 +++
[pid 14588] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14589, si_status=1, si_utime=0, si_stime=0} ---
[pid 14588] +++ exited with 0 +++
--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14588, si_status=0, si_utime=0, si_stime=0} ---
clone(Process 14591 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14591
[pid 14591] +++ exited with 0 +++
--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14591, si_status=0, si_utime=0, si_stime=0} ---
clone(Process 14592 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14592
[pid 14592] clone(Process 14593 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14593
[pid 14593] +++ exited with 0 +++
[pid 14592] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14593, si_status=0, si_utime=0, si_stime=0} ---
[pid 14592] clone(Process 14594 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14594
[pid 14594] clone(Process 14595 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14595
[pid 14595] +++ exited with 1 +++
[pid 14594] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14595, si_status=1, si_utime=0, si_stime=0} ---
[pid 14594] +++ exited with 0 +++
[pid 14592] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14594, si_status=0, si_utime=0, si_stime=0} ---
[pid 14592] +++ exited with 0 +++
--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14592, si_status=0, si_utime=0, si_stime=0} ---
clone(Process 14596 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff2580cc9d0) = 14596
[pid 14596] +++ exited with 0 +++
--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14596, si_status=0, si_utime=0, si_stime=0} ---
clone(Process 14597 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fd34d4569d0) = 14597
[pid 14597] clone(Process 14598 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f1df327b9d0) = 14598
[pid 14598] +++ exited with 0 +++
[pid 14597] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14598, si_status=0, si_utime=0, si_stime=0} ---
[pid 14597] clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f1df327b9d0) = 14599
Process 14599 attached
[pid 14599] clone(Process 14600 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f1df327b9d0) = 14600
[pid 14600] clone(Process 14601 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fb4232139d0) = 14601
[pid 14601] clone(Process 14602 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fb4232139d0) = 14602
[pid 14602] +++ exited with 0 +++
[pid 14601] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14602, si_status=0, si_utime=0, si_stime=0} ---
[pid 14601] +++ exited with 0 +++
[pid 14600] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14601, si_status=0, si_utime=0, si_stime=0} ---
[pid 14600] +++ exited with 0 +++
[pid 14599] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14600, si_status=0, si_utime=0, si_stime=0} ---
[pid 14599] +++ exited with 0 +++
[pid 14597] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14599, si_status=0, si_utime=0, si_stime=0} ---
[pid 14597] +++ exited with 0 +++
--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14597, si_status=0, si_utime=0, si_stime=0} ---
clone(Process 14603 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fd34d4569d0) = 14603
[pid 14603] clone(Process 14604 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fb42e4469d0) = 14604
[pid 14604] +++ exited with 0 +++
[pid 14603] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14604, si_status=0, si_utime=0, si_stime=0} ---
[pid 14603] clone(Process 14605 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fb42e4469d0) = 14605
[pid 14605] clone(Process 14606 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fb27c11e9d0) = 14606
[pid 14606] clone(Process 14607 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fb27c11e9d0) = 14607
[pid 14606] clone(Process 14608 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fb27c11e9d0) = 14608
[pid 14607] +++ exited with 1 +++
[pid 14608] +++ exited with 0 +++
[pid 14606] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14607, si_status=1, si_utime=0, si_stime=0} ---
[pid 14606] +++ exited with 0 +++
[pid 14605] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14606, si_status=0, si_utime=0, si_stime=0} ---
[pid 14605] +++ exited with 0 +++
[pid 14603] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14605, si_status=0, si_utime=0, si_stime=0} ---
[pid 14603] +++ exited with 0 +++
--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14603, si_status=0, si_utime=0, si_stime=0} ---
clone(Process 14609 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fd34d4569d0) = 14609
[pid 14609] clone(Process 14610 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f2136e3e9d0) = 14610
[pid 14610] clone(Process 14611 attached
child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f2136e3e9d0) = 14611
[pid 14610] clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f2136e3e9d0) = 14612
Process 14612 attached
[pid 14611] +++ exited with 1 +++
[pid 14612] +++ exited with 0 +++
[pid 14610] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14611, si_status=1, si_utime=0, si_stime=0} ---
[pid 14610] +++ exited with 0 +++
[pid 14609] --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14610, si_status=0, si_utime=0, si_stime=0} ---
[pid 14609] +++ exited with 0 +++
--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14609, si_status=0, si_utime=0, si_stime=0} ---
clone(child_stack=0x7fa6a3eedff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fa6a3eee9d0, tls=0x7fa6a3eee700, child_tidptr=0x7fa6a3eee9d0) = 14613
Process 14613 attached
[pid 14587] clone(Process 14614 attached
child_stack=0x7fa6a27bdff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fa6a27be9d0, tls=0x7fa6a27be700, child_tidptr=0x7fa6a27be9d0) = 14614
[pid 14587] clone(Process 14615 attached
child_stack=0x7fa6a25bbff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fa6a25bc9d0, tls=0x7fa6a25bc700, child_tidptr=0x7fa6a25bc9d0) = 14615
[pid 14587] clone(Process 14616 attached
child_stack=0x7fa6a23b9ff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fa6a23ba9d0, tls=0x7fa6a23ba700, child_tidptr=0x7fa6a23ba9d0) = 14616
[pid 14587] clone(Process 14617 attached
child_stack=0x7fa6a21b7ff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fa6a21b89d0, tls=0x7fa6a21b8700, child_tidptr=0x7fa6a21b89d0) = 14617
[pid 14587] clone(Process 14618 attached
child_stack=0x7fa6a1fb5ff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fa6a1fb69d0, tls=0x7fa6a1fb6700, child_tidptr=0x7fa6a1fb69d0) = 14618
[pid 14614] +++ exited with 0 +++
[pid 14615] +++ exited with 0 +++
[pid 14616] +++ exited with 0 +++
[pid 14617] +++ exited with 0 +++
[pid 14618] +++ exited with 0 +++
[pid 14613] +++ exited with 0 +++
+++ exited with 0 +++
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alí no final dá para ver as 5 threads que eu pedi no script sendo abertas no
SO. Inclusive, se analizar todo esse retorno aí dá para ver que o Ruby criou 6
threads, uma delas o ruby cria mesmo se vc fizer só um &lt;code&gt;puts&lt;/code&gt; num script. :)&lt;/p&gt;

&lt;p&gt;Discutir sobre linguagens com os amigos sempre é legal para pesquisar e
descobrir coisas novas. :)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Old comments by: Thiago FM | Not available anymore. :(&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Golang and 1.2 version performance improvement</title>
    <link rel="alternate" href="http://pothix.com/2013/12/03/golang-and-1-2-version-performance-improvement.html"/>
    <id>http://pothix.com/2013/12/03/golang-and-1-2-version-performance-improvement.html</id>
    <published>2013-12-02T22:00:00-02:00</published>
    <updated>2017-03-04T18:12:20-03:00</updated>
    <author>
      <name>Willian Molinari (a.k.a PotHix)</name>
    </author>
    <content type="html">&lt;p&gt;I&amp;rsquo;ve started using Go last month and I really liked to work with the language.&lt;/p&gt;

&lt;p&gt;The project I&amp;rsquo;m working on is dead simple and just retrieves metrics and save on
a redis server (the data will be analyzed by a different project that I&amp;rsquo;m
working on). So I have 15 goroutines retrieving data constantly and I&amp;rsquo;m using
just two native threads.&lt;/p&gt;

&lt;p&gt;I did some CPU profiling on the code using my current machine for Golang 1.1.2
and 1.2 and the results can be seen below.&lt;/p&gt;

&lt;p&gt;Golang 1.1.2:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&lt;table class="rouge-table"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="rouge-gutter gl"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class="rouge-code"&gt;&lt;pre&gt;    (pprof) top10
    Total: 188701 samples
    137454  72.8%   72.8%   137454  72.8% crypto/des.permuteBlock
    44032   23.3%   96.2%   169187  89.7% crypto/des.feistel
    3750    2.0%    98.2%   184544  97.8% crypto/des.cryptBlock
    823     0.4%    98.6%   185650  98.4% crypto/cipher.(*cbcDecrypter).CryptBlocks
    290     0.2%    98.8%      290   0.2% encoding/binary.bigEndian.PutUint64
    232     0.1%    98.9%      232   0.1% encoding/binary.bigEndian.Uint64
    227     0.1%    99.0%      227   0.1% crypto/sha1.block
    215     0.1%    99.1%      267   0.1% encoding/json.state1
    207     0.1%    99.2%      430   0.2% encoding/json.checkValid
    178     0.1%    99.3%      398   0.2% encoding/json.nextValue

    # top command result
    PID USER      PR  NI  VIRT    RES      SHR S  %CPU %MEM    TIME+  COMMAND
    18115 pothix    20   0  871800  67888   3932 S 188.8  1.7  12:40.08 crebain

    # A snapshot of the processors
    %Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
    %Cpu1  : 95.0 us,  3.0 sy,  0.0 ni,  2.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Golang 1.2:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&lt;table class="rouge-table"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="rouge-gutter gl"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;&lt;td class="rouge-code"&gt;&lt;pre&gt;    (pprof) top10
    Total: 6894 samples
    1686    24.5%   24.5%   1686    24.5%   crypto/aes.decryptBlockGo
    1299    18.8%   43.3%   3093    44.9%   crypto/cipher.(*cbcDecrypter).CryptBlocks
    471     6.8%    50.1%   1062    15.4%   encoding/json.checkValid
    420     6.1%    56.2%   541     7.8%    encoding/json.state1
    359     5.2%    61.4%   359     5.2%    crypto/sha1.block
    305     4.4%    65.9%   838     12.2%   encoding/json.nextValue
    245     3.6%    69.4%   274     4.0%    syscall.Syscall
    230     3.3%    72.7%   230     3.3%    encoding/json.stateBeginValue
    186     2.7%    75.4%   225     3.3%    encoding/json.stateEndValue
    156     2.3%    77.7%   156     2.3%    runtime.memmove

    top command result
    PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
    20534 pothix    20   0  598428  51584   3532 S  12.9  1.3   0:03.76 crebain

    %Cpu0  : 12.1 us,  5.1 sy,  5.1 ni, 72.7 id,  5.1 wa,  0.0 hi,  0.0 si,  0.0 st
    %Cpu1  : 20.0 us,  4.0 sy,  0.0 ni, 75.0 id,  1.0 wa,  0.0 hi,  0.0 si,  0.0 st
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What an improvement! :)&lt;/p&gt;

&lt;p&gt;I know that this application may not be the best example to compare Go with a
different language because it depends of a third application (that is my
bottleneck BTW) and Ruby perform as good as the new version but I really liked
to give Go a try.&lt;/p&gt;

&lt;p&gt;Go language has a lot of interesting ideas and it is growing fast.
Looks like it is a good idea of language for some of my projects, welcome Golang!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>O Guru-SP e seus 5 anos de vida</title>
    <link rel="alternate" href="http://pothix.com/2013/09/17/o-guru-sp-e-seus-5-anos-de-vida.html"/>
    <id>http://pothix.com/2013/09/17/o-guru-sp-e-seus-5-anos-de-vida.html</id>
    <published>2013-09-16T21:00:00-03:00</published>
    <updated>2017-03-04T18:12:20-03:00</updated>
    <author>
      <name>Willian Molinari (a.k.a PotHix)</name>
    </author>
    <content type="html">&lt;p&gt;Há pouco tempo aconteceu o &lt;a href="http://gurusp.org/encontros/trigesimo-primeiro-encontro-do-guru-sp"&gt;encontro numero 31 do Guru-SP&lt;/a&gt;, e como sempre saímos
(dessa vez estavamos &lt;a href="http://twitter.com/vinibaggio"&gt;@vinibaggio&lt;/a&gt;, &lt;a href="http://twitter.com/agaelebe"&gt;@agaelebe&lt;/a&gt;, &lt;a href="http://twitter.com/nuxlli"&gt;@nuxlli&lt;/a&gt; e &lt;a href="http://twitter.com/anderson_leite"&gt;@anderson_leite&lt;/a&gt;) para
aquele velho momento de bate papo pós evento. Durante a conversa o @nuxlli perguntou sobre como o Guru-SP começou e nesse momento eu comecei a relembrar
daquela velha tarde em 2008.&lt;/p&gt;

&lt;p&gt;Mas peraí&amp;hellip; &lt;strong&gt;2008&lt;/strong&gt;!! O Guru-SP está próximo de fazer &lt;strong&gt;5 anos&lt;/strong&gt; de vida! :)&lt;/p&gt;

&lt;p&gt;Em pensar que tudo começou após &lt;a href="https://groups.google.com/forum/#!topic/rails-br/HUnABlEfR7A"&gt;um post do @agaelebe na
Rails-br&lt;/a&gt; falando
sobre criar grupos locais para conversar mais sobre Ruby e fazer encontros com
mais frequência, o que gerou interesse de várias pessoas de São Paulo, que
decidiram levar esse &amp;ldquo;projeto&amp;rdquo; pra frente.&lt;/p&gt;

&lt;p&gt;Logo em seguida o &lt;a href="http://twitter.com/mfcastellani"&gt;@mfcastellani&lt;/a&gt; já iniciou &lt;a href="https://groups.google.com/forum/#!topic/ruby-sp/2SEBkbofoFA"&gt;as primeiras
discussões&lt;/a&gt; no
&lt;a href="https://groups.google.com/forum/#!forum/ruby-sp"&gt;grupo do Guru-SP&lt;/a&gt; e
aproveitamos para agendar o &lt;a href="http://gurusp.org/encontros/primeiro-encontro"&gt;primeiro
encontro&lt;/a&gt; numa churrascaria
qualquer no ABC que era mais próximo da casa do &lt;a href="http://twitter.com/mfcastellani"&gt;@mfcastellani&lt;/a&gt;, pois como ele nos
contou depois: &amp;ldquo;Se não aparecer ninguém só comeria uma carne e voltaria para
casa&amp;rdquo;. hahaha&lt;/p&gt;

&lt;p&gt;E algumas pessoas compareceram, eramos 3 pessoas conversando sobre o que poderia
ser o Guru-SP no futuro. Não conhecia o &lt;a href="http://twitter.com/mfcastellani"&gt;@mfcastellani&lt;/a&gt; nem o &lt;a href="http://twitter.com/agaelebe"&gt;@agaelebe&lt;/a&gt;, mas
ficamos boa parte da tarde conversando sobre desenvolvimento no geral e
planejando o que seria legal fazer no grupo (camisetas, eventos maiores,
encontros mensais, e etc).&lt;/p&gt;

&lt;p&gt;Logo conseguimos as camisetas do Guru-SP! Depois de cotar alguns fornecedores e
fazer um desenho legal para representar o grupo rachamos as despesas e mandamos
fazer camisetas para quem estivesse interessado. Com a entrega das camisetas
consegui conhecer muita gente que não conhecia pessoalmente.&lt;/p&gt;

&lt;p&gt;Aproveitamos que alguns de nós estariam na Campus Party e fizemos o segundo
encontro por lá! Como sempre tinha uma quantidade enorme de pessoas: Eu, o
&lt;a href="http://twitter.com/mfcastellani"&gt;@mfcastellani&lt;/a&gt; e o &lt;a href="http://twitter.com/akitaonrails"&gt;@akitaonrails&lt;/a&gt;. O &lt;a href="http://twitter.com/shadowmaru"&gt;@shadowmaru&lt;/a&gt; apareceu também, mas só me
encontrou para pegar a camiseta.&lt;/p&gt;

&lt;p&gt;Nesse meio tempo já estávamos planejando aquele &amp;ldquo;encontro maior&amp;rdquo; que conversamos
no primeiro encontro, e poucos meses depois saiu o &lt;a href="http://gurusp.org/encontros/ruby-rails-no-mundo-real-primeira-edicao"&gt;Ruby + Rails no mundo
real&lt;/a&gt; com
o auxílio da Tempo Real eventos.&lt;/p&gt;

&lt;p&gt;Apesar do quarto ter uma quantidade pequena de pessoas (apenas o &lt;a href="http://twitter.com/rafaelrosafu"&gt;@rafaelrosafu&lt;/a&gt; e
o &lt;a href="http://twitter.com/agaelebe"&gt;@agaelebe&lt;/a&gt;), o quinto encontro me surpreendeu bastante. Ao chegar na Voice
Technology (onde o &lt;a href="http://twitter.com/andre_pantaliao"&gt;@andre_pantaliao&lt;/a&gt; trabalhava na época e conseguiu o espaço
para o encontro) eu encontrei uma sala com mais de 20 pessoas aguardando as
palestras! O encontro foi bem proveitoso e mais do que nunca percebíamos o
Guru-SP crescendo.&lt;/p&gt;

&lt;p&gt;Eu considero que depois desse encontro o Guru-SP começou a andar sozinho,
conseguimos empresas parceiras para nos ajudar, o grupo cresceu bastante,
sempre tinhamos boas talks nos encontros e etc.&lt;/p&gt;

&lt;p&gt;Hoje o Guru-SP tem mais de 1100 inscritos na lista, e já tivemos encontros
comuns com mais de 100 pessoas, isso sem contar os eventos que organizamos e
que tiveram mais de 200 pessoas. &lt;/p&gt;

&lt;p&gt;Temos empresas que sempre nos ajudam, seja com espaço ou coffee break. Vale
agradecer a Caelum que por muito tempo nos forneceu o auditório mensalmente, e
ainda hoje sempre nor provê espaço quando precisamos. Não vou tentar citar
todas as empresas que ajudam porque sempre vou deixar uma de fora, mas dá para
ver cada um dos patrocínios &lt;a href="http://gurusp.org/encontros"&gt;na página de encontros do Guru-SP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Atualmente o Guru-SP não é &lt;strong&gt;somente&lt;/strong&gt; focado em Ruby, mas aproveitamos muitos
dos conhecimentos diversos de todos os participantes para trazer bom conteúdo
em várias partes da área de desenvolvimento, o que faz com que cada vez mais
tenhamos conteúdo legal e interação entre a galera.&lt;/p&gt;

&lt;p&gt;Parabéns aos Guru-SP pelos 5 anos de vida e para todo mundo que ajudou (e/ou
ainda ajuda) na organização para fazer um dos grupos de Ruby mais ativos do
Brasil, e mais do que isso um lugar legal para troca de conhecimentos.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Old comments by: nuxlli, Renato Elias, Marcelo Castellani, Reinaldo, Rafael Rosa, Vinicius Baggio Fuentes, Lucas Caton, Paulo Silveira, Nelson Haraguchi, lucas renan | Not available anymore. :(&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
</feed>
